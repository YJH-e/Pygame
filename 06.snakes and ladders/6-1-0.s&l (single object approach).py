#PYGAME START-UP
import pygame
import random
# -- Global Constants

# -- Initialise PyGame
pygame.init()

#class obstacles
class Obstacle():
    #the allList contains every start and end square number generated by the random integer generater, so that no start or end number will have the same square number.
    allList = []

    #construct obstacle
    def __init__(self):
        # Set the position of the obstacle
        #randomly generate the start and end of the obstacle
        start = random.randrange(1,98)
        end = random.randrange(start + 1,99)

        #check if the start of end is already existing                         #this piece of code (in the function) is quite inefficient with O(n^2)
        i = len(self.allList)
        if i > 0:
            j = 0
            for j in range (0,i):
                while self.start == self.allList[j]:
                    start = random.randrange(1,98)
                    print("generated in Obstacle class", start)
                #endwhile
                while end == self.allList[j]:
                    end = random.randrange(start + 1,99)
                    print("generated in Obstacle class", end)
                #endwhile
            #next
        #endif
        #add coordinate of new obstacle to coordinate lists
        self.allList.append(start)
        self.allList.append(end)
        return start, end
        #next                
    #endfunction
#end class

#class snakes
class Snake(Obstacle):
    start = 0
    end = 0

    #snake constructor is in obstacle constructor
    def __init__(self):
        start, end = super().__init__()
    #endfunction

    #get start of snake
    def getStartSnake(self):
        return self.start
    #endfunction

    def getEndSnake(self):
        return self.end
    #endfunction
#end class